{"id":"637B6349-68AD-40EF-9524-6048A90E3375","title":"A Retargetable Polymorphic Type System for Mobility Calculi","abstractText":"Mobility calculi such as the pi-calculus and ambient calculi mathematically model the behavior of systems with multiple computers and programs that dynamically change their connections and/or location. These calculi can describe existing systems or express new system designs, and can support automatic analysis. Numerous mobility calculi are known, and many new ones are designed each year.Types are a fundamental computer science tool for ensuring safety, correctness, and security of programs and systems. Types are also useful for organizing compilation, optimization, code generation, and execution. For these and other reasons, mobility calculi are usually equipped with type systems. However, each new calculus needs to have a new type system designed specifically for it. That is a tedious process and the type system's strength is limited by the methods known to its designers and the time and effort needed to design each method into a new type system.Our project will develop a retargetable type system from which type systems can be automatically derived for mobility calculi. This will make it easier to experiment with new calculus variations and thus enable the research community to more efficiently discover which calculi are useful in practice. It will also support transferring type system methods between calculi.Unlike most existing mobility calculi type systems, ours will support polymorphism and also principal typings. Polymorphism is vital for generic programming, where a single system part must handle many data types. This is particularly relevant for real-world communicating systems, where a router or a communication link must move many kinds of data even though there is only one of it. Principal typings are needed for compositional type inference, where the analysis for a system fragment uses only the analysis results for its subfragments, which can be analysed independently in any order. Compositional analysis is important for mobility, where a system's code will not be available for static analysis at a single time.The starting point for the project is the retargetable type system Poly* which we have already developed to a proof-of-concept stage where it works for many mobility calculi. Our work on Poly* demonstrates the idea of a retargetable polymorphic type system is viable, but there is much to be done to make it general enough to be widely useful. To do this work, we propose an EPSRC project for a duration of 36 months, effort of 79 person-months (including the PI), and funding of 255K to cover the co-investigator's salary, a project Ph.D. studentship, and related expenses.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/C013573/1","grantId":"EP/C013573/1","fundValue":"270885","fundStart":"2006-01-04","fundEnd":"2009-10-03","funder":"EPSRC","impactText":"","person":"J. B.  Wells","coPersons":["Henning  Makholm"],"organisation":"Heriot-Watt University","findingsText":"","dataset":"gtr"}