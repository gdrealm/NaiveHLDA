{"id":"8662F054-B37D-4865-8EBE-A546315F8AD9","title":"The Limits of Decidability: Counting, Transitivity, Equivalence","abstractText":"First-order logic is a formal language for describing structured ensembles of objects and data. The use of first-order logic to specify, query and manipulate such structured data is now firmly embedded in the theory and practice of a wide range of academic disciplines. Automating the process of deductive reasoning in first-order logic is therefore a central challenge in Computer Science.\n\nHowever, reasoning with first-order logic is known to be undecidable: it is in principle impossible to write a computer program that can reliably determine all logical consequences expressible using this formalism. On the other hand, it has long been understood that, by restricting the language of first-order logic in various ways, we obtain 'fragments' of logic in which decidability is restored. Furthermore, we observe a trade-off between expressive power and computational manageability: the smaller a fragment is---i.e. the less expressive it is---the easier it is to reason in. The research proposed here will investigate several very expressive fragments of first-order logic---those near the upper limit of decidability---and determine their decidability/computational complexity.\n\nWe take as our point of departure three fragments of first-order logic which are known to be decidable: the 'two-variable fragment', the 'guarded fragment' and the 'fluted fragment'. We investigate the effect of extending the expressive power of these logics in three ways (severally, or in combination). The first extension we consider involves numerical quantifiers, which allow us to place (upper or lower) bounds on how many objects satisfy some given property. The second extension we consider involves the use of transitive relations such as 'is taller than' or `earns more money then'. (Such relations have special logical properties that need to be taken into account in reasoning problems.) The third extension we consider involves the use of equivalence relations such as 'is the same height as' or 'has the same tax code as'. In this way, we obtain a collection of fragments of first-order logic for which it is currently open whether reasoning is decidable. We propose to resolve these open problems.\n\nFor those fragments which we show to be decidable, we shall obtain (as a by-product of our proof) an algorithm for reasoning within the fragments in question; for those shown to be undecidable, we know that no such algorithm exists. Moreover, for the decidable fragments, we can quantify the difficulty of reasoning within them, and even identify the specific kinds of formulas that are responsible for the difficult cases. Thus, our research represents a contribution to the enterprise of using first-order logic to describe, query or manipulate structured data.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/K017438/1","grantId":"EP/K017438/1","fundValue":"71958","fundStart":"2013-03-14","fundEnd":"2015-09-17","funder":"EPSRC","impactText":"  The research is still ongoing. As yet, it is too early to expect discernible impact.  ","person":"I  Pratt-Hartmann","coPersons":[],"organisation":"The University of Manchester","findingsText":" The aim of the proposed research is to investigate the computational complexity of reasoning with certain expressive formal languages used to describe structured ensembles of data. The resolution of these issues will: (a) enhance our understanding of the theoretical limits of automated reasoning, and (b) extend the repertoire of techniques available to knowledge engineers for reasoning about structured data.\n\nWe take as our point of departure three formal languages for which reasoning procedures are already known: (i) the 'two-variable fragment', (ii) the 'guarded fragment' and (iii) the 'fluted fragment'. We then investigate the effect of extending the expressive power of these languages in the following ways: (i) by adding numerical quantification (the ability to specify how many objects have a certain property), (ii) by adding transitive relations (relations such as 'is-more-expensive-than') (iii) by adding equivalence relations (relations such as 'is-the-same-price-as'). We ask:\ndo algorithms exist for automatically determining logical consequences in these extended languages, and what is the complexity of these algorithms? \n\nSo far (with several months of the project left to run), we have met all of the stated objectives regarding logics featuring counting quantifiers. The principal results obtained are: (i) two-variable first-order logic can be extended with both counting quantifiers and a single equivalence relation without increasing the complexity of reasoning; (ii) adding a second equivalence relation results in undecidability. These results close the last two open main problems concerning decidable logics with equivalence relations. Working with colleagues at the universities of Wroclaw and Opole (Poland), we are actively exploring the applications of these logics to reasoning about data-structures occurring naturally in programming. The above results have been published in one conference paper and one journal paper, with a further two journal papers on the point of completion, and a further two journal papers in preparation (scheduled for completion in two to three months).\n\nThe remaining project objectives concerning extensions of the so-called 'fluted fragment' are still in progress. The research undertaken here has potential applications in Knowledge Representation, Artificial Intelligence and uutomatic program verification. Digital/Communication/Information Technologies (including Software)","dataset":"gtr"}