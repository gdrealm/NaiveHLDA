{"id":"49AABF23-A971-40AA-B47A-201AFF6E59D5","title":"Automated Formal Proofs for Polynomial and Transcendental Problems","abstractText":"Many applications in science and engineering involve mathematical formulas. Such formulas may involve polynomials, logarithms, exponentials and related functions, perhaps combined using logical symbols to express conditional statements. No automatic procedure exists for solving such problems in the general case. Where automatic procedures do exist, they are often far too expensive (in terms of computer time and memory requirements) to use in practice. However, a judicious selection of specialised procedures can yield efficient solutions for many problems that arise in practice. The proposal is to identify and implement variety of such procedures.This work will be undertaken in the context of software tools known as interactive theorem provers. These tools perform logical deductions to be very high degree of reliability; they are increasingly being utilised to help assure correctness for safety critical applications. A primary challenge of this project is to reconcile the detailed low-level checking used in interactive theorem provers with the high-level reasoning typical of most approaches to solving mathematical formulas. One fruitful technique is to deliver evidence from the mathematical solver to the interactive theorem prover: for some types of problems, finding the solution is difficult, but verifying a claimed solution is easy.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/G002290/1","grantId":"EP/G002290/1","fundValue":"86405","fundStart":"2008-09-01","fundEnd":"2009-08-31","funder":"EPSRC","impactText":"","person":"Lawrence Charles Paulson","coPersons":[],"organisation":"University of Cambridge","findingsText":" The purpose of this one-year project was to deliver specialised algorithmic support for problems involving polynomials and transcendental functions. The general case being intractable, the point was to identify and solve important special cases. The outcome consisted largely of code, added to the Isabelle theorem prover, for deciding important classes of arithmetic problems. An additional outcome is an Isabelle theory of formal power series, which provides a basis for formalising approximations to transcendental functions. The code and formal theories developed within this project has been incorporated into Isabelle, which is freely available and used worldwide, in both academic and industrial research environments. Digital/Communication/Information Technologies (including Software)","dataset":"gtr"}