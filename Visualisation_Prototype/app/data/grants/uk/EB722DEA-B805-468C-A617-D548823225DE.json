{"id":"EB722DEA-B805-468C-A617-D548823225DE","title":"Testing Probabilistic and Stochastic Systems (ProbTest)","abstractText":"Traditionally, methods for formally specifying or modelling systems have concentrated on the representation of the functional behaviour of the systems. Such models can be used as the basis of testing that the system under test (SUT) has the required set of behaviours: its functional behaviour is correct. They are an effective way of representing the required functional properties of the system under test but do not allow us to express desired non-functional properties such as time, probabilities or resources. Several formalisms were extended in order to deal with these kind of properties. The new languages allow the explicit representation of the probability of performing a certain task, for example that if a function of the system is used it should provide the expected functionality at least 99.9% of the time. They also allow us to express the time that should be consumed by the system while performing tasks, either given by fixed amounts of time or defined in probabilistic/stochastic terms. For example, we may require that on average a result is produced within 1 second.ProbTest will consider models that include probabilities and stochastic time. Many systems have real-time constraints and thus the inclusion of time is important. Probabilities are highly relevant where resources are shared and so Quality of Service requirements can be probabilistic. In addition, many systems are probabilistic in nature due to either the use of subsystems communications over a (possibly unreliable) medium or through the system consisting of several threads or parallel components and there being different possible synchronization sequences. There are also a number of communications protocols, such as Bluetooth and Ethernet, that have probabilistic requirements and in order to reason about embedded systems, which are state-based, it is often necessary to use probabilities. Thus, there are systems with probabilistic and/or stochastic requirements and it is important to have efficient, systematic methods for testing whether they actually satisfy these requirements. ProbTest is a four year project that will support collaboration in this area between Hierons, of Brunel University, and Nunez, of Universidad Complutense de Madrid.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/G032572/1","grantId":"EP/G032572/1","fundValue":"72759","fundStart":"2009-03-06","fundEnd":"2013-03-05","funder":"EPSRC","impactText":"  The work has certainly had an impact on academics but I am not aware of any wider impact yet.  ","person":"Rob  Hierons","coPersons":[],"organisation":"Brunel University","findingsText":" This project developed new techniques for automatically generating test cases to check whether a system is correct. These techniques were designed for classes of systems that have requirements that are probabilistic (e.g. 20% of times the output should be ...) or that have stochastic timing requirements (e.g. the mean time taken is one second). In addition to this planned line of work we also explored the nature of distributed testing, in which the system under test interacts with users at physically distributed locations. This scenario leads to different notions of correctness since no user observes the complete (global) behaviour of the system. Combining probabilistic and timed approaches.\nExplore verification problems for the models.\nProduce new test generation algorithms for distributed testing. Digital/Communication/Information Technologies (including Software)","dataset":"gtr"}