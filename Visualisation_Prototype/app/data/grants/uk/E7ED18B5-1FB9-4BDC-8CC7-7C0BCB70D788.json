{"id":"E7ED18B5-1FB9-4BDC-8CC7-7C0BCB70D788","title":"Multi-layered abstractions for PDEs","abstractText":"Partial differential equations (PDEs) are the mathematical basis ofvast areas of science. From fluid problems such as flow past anaircraft or the circulation of the worlds oceans to structuralproblems in bridges or inside the bones of a body and even in theworld of financial options pricing, PDEs are the key description. Itis therefore unsurprising that computing solutions to PDEs consumes amassive proportion of high performance computing resources in bothindustry and academia.Hitherto, the software which solves PDEs has been written for specificsorts of hardware by people who had to be experts both in the sciencethey were modelling and in programming. This is an expensive anderror-prone process and, because it occurs in an informal way inengineering and science departments, has suffered from a lack of inputfrom modern computer science. However, what makes this proposalcritical for computational science are the large changes which areoccuring in hardware technology. The emergence of new massivelyparallel platforms, such as graphical processing units (GPUs) andmulticore CPU systems is requiring very different approaches tolow-level programming and, importantly, different approaches fordifferent hardware platforms. It also requires new research into thebest optimisation strategies for these platforms. The current approachto writing scientific software will not deliver the changes that arerequired within the industrial and government funding resources available.This project will break this paradigm by using multiple layers ofabstraction to present to scientists and engineers a way ofprogramming PDE problems which is independent of the hardware and tocomputer scientists, a program generation space in which they cangenerate optimal algorithms for PDEs on different hardware platformswithout becoming embroiled in domain science. In particular, we willdevelop a hardware abstraction layer (OP2) which will allow programsto be written by explicitly stating what is parallel. The OP2 layersoftware will then translate this into low-level code which utilisesthe parallelism in a particular hardware platform. For developersworking with the finite element method (FEM), an importantcomputational technique for PDEs, we will present an additional layerwhich will enable them to write the finite element problem in a highlevel language, UFL. This will then be translated to OP2 and thencedown to the hardware layer.We will demonstrate the effectiveness of this approach with two PhDprojects. One will look into the dispersion of polutants in urbansettings while the other will study the stress properties of surgicalbone implants. These are both important scientific questions whichcurrently suffer from a lack of resolution and therefore need to beable to employ the latest high performance hardware.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/I006079/1","grantId":"EP/I006079/1","fundValue":"237881","fundStart":"2010-10-11","fundEnd":"2014-04-10","funder":"EPSRC","impactText":"  The OP2 library is being used by Rolls-Royce for HYDRA, its corporate CFD code which is used for analysis and design. Aerospace, Defence and Marine Economic","person":"Mike  Giles","coPersons":[],"organisation":"University of Oxford","findingsText":" This project has successfully developed a high-level framework for the automatic parallelisation of unstructured grid applications on a wide variety of target architectures. It is currently being exploited for a major CFD application at Rolls-Royce. The software which has been developed has been made openly available. Digital/Communication/Information Technologies (including Software),Education,Energy","dataset":"gtr"}