{"id":"58F6130E-CFB8-4425-A038-7124BA965AEE","title":"Deep Online Cognition in Modular Software","abstractText":"Have you ever wondered how much energy it takes to visit the BBC news website? Or send an email? Or watch iPlayer? All these modern everyday services consume an increasing amount of energy on a global scale through sites called &quot;data centres&quot; - large computer facilities which your computer, phone or tablet talks to when it uses these services. By 2020, these data centres are expected to represent up to 20% of total worldwide energy consumption.\n\nThis project aims to reduce energy consumption by enabling data centres to service more users in a shorter time. This would allow us to use smaller, more efficient, data centres thus reducing the amount of energy that they consume. We will achieve this by developing a new way for the software that runs inside data centres -- the software that sends web pages or video content to your computer -- to analyse itself in real-time, to locate areas of inefficiency, and to automatically correct these inefficiencies when they are observed.\n\nThis real-time analysis is a continual process. The kinds of user requests that are seen by a data centre change over time, meaning that the data centre software needs to continually optimise itself against new types of access and workload patterns generated by the current population of users. The optimal software that is needed to respond to requests for many small HTML and image files may, for example, be completely different to the optimal software that is needed to respond to requests for a few large popular media streams. Existing evidence shows data centre software is very difficult to optimise for a single user workload pattern, never mind the fluctuating patterns to which real data centres are subjected over time. \n\nThe approach we are taking in this research has yet to be tried in any prior work -- it is uniquely enabled by a new way of building software that has been developed by the lead investigator of this project. For the first time this approach involves fully automated learning and understanding by a piece of software about the capabilities and performance levels of each sub-element (or 'component') that makes up that software. Over time the software will build up an understanding of how each of its components performs against various user workload patterns to which it is subjected, and how the performance of those components relates to the current performance level of the overall software system. When the overall performance level drops, for example due to a shift in the user workload pattern, the individual software component or components responsible for this performance drop will be automatically identified and exchanged for other components that are known to perform better in the current set of operating conditions.\n\nIn essence this approach will ultimately lead to a kind of &quot;assisted&quot; model of software development, where software itself acts as an active member of its own development team to identify and correct inefficiencies while the software is running. When uncorrectable inefficiencies are detected, due to the lack of any high-performing alternative components, the software will notify its development team of this situation and will ask them to design new alternative components to suit a particular set of operating conditions.\n\nWe are confident that the novel approach taken by this research will be successful in achieving previously untapped performance improvements and has the potential not only to save energy at data centres but to create a whole new model of software development -- a model in which software itself is able to reason about its own design and about its efficacy for a particular purpose.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/M029603/1","grantId":"EP/M029603/1","fundValue":"98561","fundStart":"2015-09-01","fundEnd":"2017-02-28","funder":"EPSRC","impactText":"","person":"Barry  Porter","coPersons":[],"organisation":"Lancaster University","findingsText":"","dataset":"gtr"}