{"id":"E511C5E7-F7B3-484C-9476-18471CC9FEB9","title":"Detecting Induced Graph Patterns","abstractText":"A graph is a network consisting of nodes called vertices and links between those nodes called edges representing some relationship such as individuals that are connected to other individuals in a social network. Graphs are ubiquitous, not only in science and engineering but also in real life, as is the study of whether a given graph H appears as a pattern within another given graph G so that G can be transformed to H via a sequence of operations. For instance, can a social network G be compressed to a smaller (and easier to analyze) network H without destroying too much information? This example shows that the notion of appearing as a pattern depends upon the operations allowed when transforming G into H. We consider the following four elementary graph operations: \n\n1. vertex deletions\n2. edge deletions\n3. edge contractions\n4. vertex dissolutions.\n\nA vertex deletion removes a vertex (and its adjacent edges) from the graph. An edge deletion removes an edge from the graph. An edge contraction removes the vertices u and v of the edge (u,v) from the graph and replaces them by a new vertex that is made adjacent to precisely those remaining vertices to which u or v was previously adjacent. A vertex dissolution is the removal of a vertex v from the graph with exactly two neighbours u and w followed by the inclusion of the edge (u,w). \n\nCombining these four graph operations leads to ten essential graph containment relations. For example, a graph H is called a minor of a graph G if H can be obtained from G by a sequence of vertex deletions, edge deletions and edge contractions (and so also vertex dissolutions), whereas H is an induced minor of G if we do allow vertex deletions and edge contractions but no edge deletions. Each graph containment relation corresponds to a decision problem: \n\nsubject to the specified containment relation, does a graph G contain some graph H?\n\nIn order to answer this question we must design a so-called algorithm, which can be seen as a set of instructions, like a recipe for preparing a meal, but with the purpose to turn it into a computer program to solve the problem automatically. A crucial aspect is the running time, i.e., the time it will take the computer to solve the problem. However, it may well be possible that the problem falls into the category of discrete optimization problems for which no reasonably fast algorithm is known, and for which the existence of such an algorithm is even considered to be unlikely. \n\nOne of the most important and fundamental achievements of Theoretical Computer Science and Discrete Mathematics is Robertson and Seymour's Graph Minor Project. They have provided a structural characterization of graphs without a forbidden minor and have designed an algorithm that solves any problem H-Minor in cubic time; the latter problem is to decide whether a given graph contains some fixed graph H (i.e., that is not part of the input) as a minor. Their theory has led to deep results across Computer Science and Mathematics. An important consequence of their theory is that any containment problem allowing edge deletions can be efficiently solved. \n\nOur over-arching aim is to develop a theory, similar to that of Robertson and Seymour, but on induced containment relations, i.e., when edge deletions are not permitted graph operations. As techniques that are useful for their non-induced counterparts can no longer be applied, a basic theory for induced containment relations, similar to the Graph Minor Project of Robertson and Seymour, is largely absent. Our research proposal aims to change this.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/K025090/1","grantId":"EP/K025090/1","fundValue":"363442","fundStart":"2013-09-25","fundEnd":"2016-09-24","funder":"EPSRC","impactText":"","person":"Daniel  Paulusma","coPersons":["Iain Alastair Stewart"],"organisation":"Durham University","findingsText":" not applicable this year not applicable this year Digital/Communication/Information Technologies (including Software)","dataset":"gtr"}