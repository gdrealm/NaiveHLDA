{"id":"C841D850-41D6-43E7-A214-54C905CA8250","title":"Verifying Changes: How Much Will it Cost?","abstractText":"Most software systems evolve over time to adapt to changing environment, needs, new \nconcepts, new technologies and standards. Modification to the software is\ninevitable in software evolution and may be through growth in \nthe number of functions, components and interfaces, or alteration of existing modules. \nExamples commonly seen are changes or upgrades in operating systems, browsers, communication software. \nSoftware maintenance to understand, implement and validate changes is a very expensive activity and costs billions of dollars each year in the software industry. \nIn this proposal, we focus on the problem of validating changes and their\neffects. This is typically carried out using regression testing,\ndefined as ``selective retesting of a system or component to verify that\nmodifications have not caused unintended effects and that the system or\ncomponent still complies with its specified requirements''\n\nRegression testing is an expensive and time consuming process and\naccounts for majority of the maintenance costs.\nBalancing confidence in the software correctness (gained from extensive and\nfrequent regression testing) against cost of regression test effort is one\nof the major challenges in software maintenance. \nEstimates of regression test cost will help developers and managers in\nachieving this balance. Accurate regression test cost estimates are crucial\nfor planning project schedules, allocating resources, software reliability, monitoring and control. \n \nCost models estimating maintenance effort and development effort have been developed in the past.\nNevertheless, these models cannot be used since crucial elements for predicting test effort \nsuch as testing requirements, test cases, test quality metrics are ignored for the most part in these models. \nOur goal in this proposal is to define a model that accurately estimates regression test cost for evolving\nsoftware taking into account effects of changes on software behaviour, testing requirements, industry and process specific information, and quality metrics to be satisfied. \nAt the end of this proposal, we will have tools that when given the software changes and quality requirements as inputs can predict the cost of validating the changes. \nWe will evaluate the test effort estimates on large open-source software evolution repositories \nsuch as DEBIAN GNU/Linux distribution releases and OpenSSH. \nWe will also collaborate with IBM and evaluate our estimates on their software.\n\nThe prototype analysis tools that we develop during the course of the project\nwill be made freely available in open-source form. We will package and ship our analysis tools as part of\nwell-established distributions such as Debian. \nThis will allow numerous developers of large-scale software (including our\nproject partner) to directly apply our techniques to their problems,\nimproving their development and maintenance processes.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/L024624/1","grantId":"EP/L024624/1","fundValue":"94734","fundStart":"2014-07-31","fundEnd":"2016-01-30","funder":"EPSRC","impactText":"","person":"Ajitha  Rajan","coPersons":[],"organisation":"University of Edinburgh","findingsText":"","dataset":"gtr"}