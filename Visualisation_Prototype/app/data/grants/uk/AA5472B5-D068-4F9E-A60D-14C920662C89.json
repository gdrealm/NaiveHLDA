{"id":"AA5472B5-D068-4F9E-A60D-14C920662C89","title":"Logic-Based Refactoring of Ontologies","abstractText":"Ontologies --- formal models of a particular domain --- are increasingly used as infrastructure for an intelligent processing of information within both industry and data-intensive research. In the case of large and complex ontologies, the representation becomes unnecessarily complex over time and makes further changes more difficult. The representation of ontologies not only affects the work of ontology engineers, but also the acceptance of the corresponding application in practice. Within the Software Engineering community, the adverse impact of the avoidable complexity and code redundancy on software quality has been a long-standing and extensively discussed problem. Since it is difficult to plan all details of a software system prior to its development, it is common to apply refactoring to the system over the course of the implementation --- to revise the structure of the system to improve code quality while preserving its behavior. Refactoring is a common activity in professional software development and is well supported by popular development environments. Our goal is to lay the foundations for refactoring support in Ontology Engineering. The focus of this project is the structural simplification of ontologies --- refactoring aiming to lower the structural complexity and redundancy within ontologies. \n\n\nWhile there are many analogies between refactoring of software and refactoring of ontologies, there are also some notable differences originating from the difference between common programming languages and DL-based ontology languages. One important difference is that the latter are computationally well-behaved. For instance, it is possible to automatically check whether two ontologies are equivalent, i.e., whether they give rise to same logical consequences, while checking the equivalence of software programs is an undecidable problem. If we exploit formal semantics of ontology languages, we can make refactoring of ontologies more efficient. The main goal of this project is to investigate how we can automate structural simplification of ontologies by taking into account their formal semantics. To this end, we aim at providing a set of practical metrics for the structural complexity of ontologies. Based on these metrics, we aim at developing algorithms and tools for automatic structural simplification of ontologies. \n\nThe extent to which an ontology can be simplified depends on the vocabulary specified within the ontology. In some cases, by introducing several additional terms --- enriching the vocabulary of the ontology --- we can significantly increase the effectiveness of structural simplification. One of the aims of this project is to provide tool support that would enable efficient vocabulary enrichment as part of ontology refactoring.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/M007316/1","grantId":"EP/M007316/1","fundValue":"98143","fundStart":"2014-10-16","fundEnd":"2016-10-15","funder":"EPSRC","impactText":"","person":"Nadeschda  Nikitina","coPersons":[],"organisation":"University of Oxford","findingsText":"","dataset":"gtr"}