{"id":"43D3E183-E146-4350-A203-79E50928A9F1","title":"Exploiting Parallelism through Type Transformations for Hybrid Manycore Systems","abstractText":"Modern computing systems are becoming increasingly diverse, but the common feature of all emerging computing platforms is the increased potential for performing many computations in parallel, by providing large numbers of processor cores. Computer systems consisting of various different platforms have great potential for performing tasks fast and efficiently. However, programming such systems is a great challenge. \n\nThe era of performance increase through increased clock speeds has come to an end and we have entered a period where performance increases can only come from increased numbers of heterogeneous computational cores and their effective exploitation by software. Because of the immense effort required to adapt existing parallel software to novel hardware\narchitectures with present technology, there is a very real danger that future advances in hardware performance will have little impact on practical large-scale computing\nusing legacy software.\n\nThe specific challenge that we want to address in this proposal is how to exploit the parallelism of a given computing platform, e.g. a multicore CPU, a graphics processor (GPU) or a Field-Programmable Gate Array (FPGA), in the best possible way, without having to change the original program. These different platforms have very different properties in terms of the available parallelism, depending on the nature and organisation of the processing cores and the memory. In particular FPGAs have great potential for parallelism but they are radically different in architecture from mainstream processors. This makes them very difficult to program.\n\nThe key problem here is how to transform a program so that it will best use the potential for parallelism provided by the computing platform, and crucially, how to do this so that the resulting program is guaranteed to have the same behaviour as the original program.\nOur proposed approach is to use an advanced type system called Multi-Party Session Types to describe the communication between the tasks that make up a computation. \nTo use a rough analogy, the computation could for instance be viewed as a car assembly line, where every unit performs a particular task such as painting, inserting doors, wheels, motor etc. Depending on the organisation and composition of the factory, the order in which these operations is performed will determine the speed with which a car can be assembled. However, when reordering the operations, one must of course ensure that changing the order does not lead to incorrect assembly. \n\nTo return to the computational problem, by using the Multi-Party Session Types to describe the communication, we have a formal way of reasoning about the transformations. By developing a formal language for the transformations we can prove their correctness. This is the main novelty of the proposal: the formal system for type transformations. The actual transformations can be viewed as &quot;programs&quot; in this formal language. They will be informed by the properties of the computing platform. To provide this link between the transformation and the platform, we will also develop a formal description of parallel computing platforms. \n\nBy building these formal systems into a compiler we will be able to transform programs to run in the most efficient way on hybrid manycore platforms. \nThe main benefit from the proposed research is that the programmer will not need to have in-depth knowledge of the highly complex architecture of a hybrid manycore platform. This will be of great benefit to in particular scientific computing, because it also means that programs will not need to be rewritten to run with best performance on novel systems.\n\nTo demonstrate the effectiveness of our approach we aim to develop a proof-of-concept compiler which will transform programs so that they can run on FPGAs, because this type of computing platform is the most different from other platforms and hence the most challenging.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/L00058X/1","grantId":"EP/L00058X/1","fundValue":"1539600","fundStart":"2014-01-06","fundEnd":"2019-01-05","funder":"EPSRC","impactText":"  This 5-year project only started last January so we are in the early stages, there is as yet nothing specific to report.\nSo I've just ticked boxes below to keep the system happy. Other Economic","person":"Wim  Vanderbauwhede","coPersons":["Sven-Bodo  Scholz","Simon John Gay","Nobuko  Yoshida","Wayne  Luk"],"organisation":"University of Glasgow","findingsText":" This 5-year project only started last January so we are in the early stages, we have just begun to generate output so there is as yet very little specifically to report. \nWe did a study on the capability and achievable performance of FPGAs for HPC applications for an audience of non-computing scientists. Essentially, we show that FPGAs have indeed great potential to make High-Performance Computing more efficient. As we show that FPGAs can indeed be used for HPC tasks, this is of interest to the scientific community as well as the FPGA and HPC communities.\nAs you ask for sectors below, this is of course indirect: any sector needing weather forecasts etc would potentially benefit. Agriculture, Food and Drink,Construction,Energy,Environment,Healthcare,Leisure Activities, including Sports, Recreation and Tourism,Transport,Other","dataset":"gtr"}