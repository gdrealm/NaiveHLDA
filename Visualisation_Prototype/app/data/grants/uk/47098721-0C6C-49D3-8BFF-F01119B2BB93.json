{"id":"47098721-0C6C-49D3-8BFF-F01119B2BB93","title":"Bridging Theory and Practice in Key Exchange Protocols","abstractText":"Key exchange protocols address a crucial problem in security: how to securely distribute cryptographic keys to remote users. Since the seminal paper by Diffie and Hellman in 1976, this subject has been extensively studied for over thirty years. \n\nYet, designing a secure key exchange protocol is notoriously difficult. Many proposed schemes have been found with security flaws, including those specified in the international standards. Heuristic designs based on ad-hoc arguments rather than rigorous security proofs are commonly seen as bad practice. However, several &quot;provably secure&quot; key exchange protocols also turn out to be insecure.\n\nSo far, almost all key exchange protocols in the past have sidestepped an important engineering principle, namely the sixth principle -- i.e., &quot;Do not assume that a message you receive has a particular form unless you can check this&quot; (Anderson &amp; Needham, 1995).\n\nThe importance of the sixth principle has been widely acknowledged by the security community for many years, but in reality, key exchange protocol designers have generally abandoned this prudent principle on the grounds of efficiency -- following the sixth principle would require using Zero Knowledge Proof (ZKP), which is considered too computationally expensive. However, discarding ZKP has the serious consequence of degrading the security, as evident by many reported attacks in the past. All these indicate a gap in the field.\n\nIn the project, we propose to bridge the gap by combing the sixth principle and the Public Key Juggling (PKJ) technique. The PKJ technique has proved useful in tacking several important security problems in the past. It can be integrated with the sixth principle in a perfect match: the former serves to optimize the protocol efficiency while the latter underpins the protocol robustness. \n\nIn the proposed research, we will apply the sixth principle and the juggling technique to design new key exchange protocols that are robust and efficient. We will develop new formal models to capture the sixth principle, which has been largely neglected by existing model specifications. Finally, we will aim to promote robust and efficient key exchange protocols to the international standards. In particular, our J-PAKE key exchange protocol has stood years of cryptanalysis and has been deployed in practical applications. Its standardization is a natural step forward and will benefit the security industry in general.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/J011541/1","grantId":"EP/J011541/1","fundValue":"99870","fundStart":"2012-06-13","fundEnd":"2014-06-12","funder":"EPSRC","impactText":"  The Bouncycastle library is a widely distributed and adopted software package for implementing cryptographic functions in Java and C# programs. As of Feb, 2013, J-PAKE, which is a password-based key exchange protocol developed by the holder of this grant and his colleague, had been included into the new release of the Bouncycastle library (version 1.48). This inclusion is fairly recent, but the impact will likely become significant since Bouncycastle has been so widely used and that the use of J-PAKE to build secure communication is so foundational for many application. As of Oct 2014, J-PAKE has been adopted by the ISO/IEC 111770-4 standard. Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software),Security and Diplomacy Societal,Economic","person":"Feng  Hao","coPersons":[],"organisation":"Newcastle University","findingsText":" 1. we have identified deficiencies in several existing formal models that are commonly applied to analyze security of key exchange protocols (for achieving &quot;provable security&quot;). Despite that many models had been proposed in the literature, we found there was no easy answer to the question &quot;which exact model is the right model&quot;. There is a gap in this field, which needs to be acknowledged and filled in future research.\n\n2. We have discovered weaknesses in several existing key exchange protocols, including dragonfly (a protocol recently submitted to IETF for international standardization), SPEKE (a protocol that has already been standardized in IEEE P1363.2 and ISO/IEC 11770-4) and MK-AKE (a protocol that is &quot;provably secure&quot; and published in ACNS'08). Our attacks and proposed countermeasure have been generally acknowledged by the designers of protocols. In particular, the changes we propose for patching the SPEKE protocol have been adopted by the ISO/IEC 11770-4 standard.\n\n3. We have developed several new key exchange protocols, including a two-server ID-based key exchange protocol (published in ESORICS'14), a Secure Storage and Erasure protocol (under review), two group password-authenticated key exchange protocols (under review) and two BitCoin-based authenticated key exchange protocols (under review).\n\n4. We have successfully got J-PAKE (a password-based key exchange developed by the PI and his colleague in 2008) adopted by ISO/IEC 11770-4 standard, following the ISO/IEC SC27 meeting at Mexico in Oct 2014. We found there was a good demand from industry for J-PAKE and similar techniques for achieving end-to-end secure communication over the Internet. 1. The inclusion of a new J-PAKE protocol into the ISO/IEC 11770-4 standard in 2014 will help encourage the wider use of this technique. At the moment, the technique has already been implemented in open source libraries such as OpenSSL, Bouncycastle API, Mozilla NSS, and used in some real-world applications such as browser sync.\n\n2. The SPEKE protocol is one of the most well-known password-authenticated key exchange protocols and it has already been internationally standardized and used in commercial applications (e.g., Blackberry phone). However, we have found the standardized SPEKE has two weaknesses which render the protocol vulnerable to certain attacks. We propose countermeasures, which have been adopted by the ISO/IEC 144770-4 standard. We expect this will have an international impact. Aerospace, Defence and Marine,Digital/Communication/Information Technologies (including Software),Security and Diplomacy,Transport","dataset":"gtr"}