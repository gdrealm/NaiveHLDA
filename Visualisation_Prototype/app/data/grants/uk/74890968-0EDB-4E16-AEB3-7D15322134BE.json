{"id":"74890968-0EDB-4E16-AEB3-7D15322134BE","title":"Abstraction-Level Energy Accounting and Optimisation in Many-core Programming Languages","abstractText":"Energy efficiency is becoming increasingly important in today's world of battery powered mobile devices and power limited servers. While\nperformance optimisation is a familiar topic for developers, few are even aware of the effects that source code changes will have on the\nenergy profiles of their programs. Without knowledge of these effects, compiler and operating system writers cannot create automatic energy\noptimisers. To realise the needed energy savings, we require the capability to track energy consumption and associate it to code\nand data at a fine granularity. Furthermore, compilers and operating systems must exploit this capability to optimise applications\nautomatically.\n\nThis proposal presents a novel approach to software-centric modelling, measurement, accounting and optimisation of energy-efficiency on\nmany-core systems. Energy consumption will be matched against programming language abstractions, from basic-blocks to functions,\nloops, and parallel constructs, and from variables to data structures, providing developers with the information that they need. The project will use this fine grained accounting to build novel compiler optimisations that target energy consumption. It will create low energy runtime systems that adapt to environmental changes. It will develop energy efficient operating system scheduling that manages multi-tasking for heterogeneous many-cores. The project aims to improve performance per Watt by at least 40%.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/L000555/1","grantId":"EP/L000555/1","fundValue":"661061","fundStart":"2013-12-31","fundEnd":"2016-12-30","funder":"EPSRC","impactText":"  The key result with tangible economic impact that stemmed from the use of the ALEA energy accounting tool, was demonstrated in a publication in WHPCF14 (in conjunction with the SC14 Conference). The paper explored the viability of micro-servers as energy-efficient alternatives to state of the art servers in datacentres.\n\nThe discovery articulated in the paper was that replacing servers based on Intel SandyBridge processors with micro-servers based on ARM SoCs, and using scale-out techniques to recover performance loss, produced an overall reduction of Total Cost of Ownership (TCO) of the aforementioned data centres of at least 30%.. This reduction of TCO comes at no cost to Quality of Service (QoS) and Service-Level Agreements (SLAs), thanks to scale-out. \n\nThe result will be formally published in November 2014 and has been disseminated to stakeholders in the capital markets sector via a presentation by Credit Suisse at the STAC summit.\n\nThe project team at Queen's University of Belfast has entered into discussion with Credit Suisse to explore the potential of the aforementioned result in improving the energy-efficiency of their servers through interventions in their trading and risk analytics software. This exploratory activity has attracted in-kind contribution in terms of personnel time (0.1 FTE for one year) to engage with the Queen's team. Digital/Communication/Information Technologies (including Software),Financial Services, and Management Consultancy Economic","person":"Dimitrios  Nikolopoulos","coPersons":["Hugh  Leather","Michael  O'Boyle","Bronis R.  De Supinski"],"organisation":"Queen's University of Belfast","findingsText":" ALEA develops tools that help the users or the operators of a computing system understand how much energy is consumed by the system and how can the observed energy consumption be traced back to the software and applications running on the system. \n\nThe ALEA technology has a range of applications, from methods to extend battery life in mobile devices based on heterogeneous many-core embedded processors, to methods for reducing the Total Cost of Ownership (TCO) of compute and storage nodes in datacentres. \n\nALEA's main finding during the first year of the project was a statistical sampling tool that enables accurate measurement and accounting of energy consumption between code abstractions in software, including methods, basic blocks and machine-level instructions. The project has validated the accuracy and correctness of the tool against two state-of-the-art many-core architectures based on Intel IvyBridge and Samsung Exynos substrates. \n\nThe ALEA tool was further enhanced with power models and power sampling methods for FPGAs (reported in an IEEE FPT2014 publication).\n\nALEA has also explored methods to accurately apportion energy consumption between software activities that share hardware resources, such as secondary cache space, memory and network bandwidth. The results of this effort have reported in a paper in the Elsevier Sustainable Computing journal.\n\nThe ALEA energy accounting tool has been deployed in several use cases, including a study of the energy-efficiency of microservers and scale-out techniques as an alternative to heavy-duty servers (reported in an IEEE/ACM WHPCF14 publication), a new method for performance optimisation on many-core systems under power capping using artificial neural networks (reported in an IEEE ICCD14 publication), a study of the power-efficiency of binary rewriting and task migration code used for the purposes of scheduling applications on heterogeneous many-core systems (reported in an IEEE IC-SAMOS14 publication) and a study of the energy-efficiency of approximate iterative solvers (reported in a Springer Computer Science R&amp;amp;amp;amp;amp;amp;D Journal publication)\n\nIn the context of energy-aware program optimisation, ALEA pursued three directions of research:\n\nThe first line of research identified ways of controlling the power and energy consumption of applications through the optimisation options of the compiler. While these options by design have a significant effect on the performance of the application, little was known about the effects on the energy and power consumption. Our work showed that while energy consumption is highly correlated with performance and cannot be controlled independently, power consumption can be effectively and independently controlled through the compiler.\n\nThe second line of research developed a platform for creating benchmarks from real users interacting with real mobile applications. Having representative benchmarks is critical for the evaluation of almost all research done in the field of Computer Science and is a necessary requirement for methodologies like iterative compilation and machine learning. Unfortunately it's difficult to create benchmarks for mobile devices since the bulk of applications running on them are interactive applications. By their own nature, interactive applications might display significantly different behaviour from one execution to the next, which means that programmatically replaying one captured, or even worse an artificially created, set of interactions with the device is not enough. Furthermore, quantifying the performance of the application is difficult. Interactive applications are characterised by short bursts of activity followed by long pauses where the application waits for user input. What matters performance-wise is how much time it took to service these short bursts of activity, but identifying and measuring the runtime of these bursts has been done before only when explicit programmatic support was provided for this task by the application itself.\n\nThe ALEA benchmarking platform overcomes these problems by capturing both the user input and video from the device screen. By capturing the user input, we are able to fully replicate the way the user interacts with the application. By capturing the display, we can semi-automatically identify what is the system's visible response to each user input event. Combining the two, we can both replay any user interaction with the application and measure the time it takes for the application to complete its response to an input event, thus quantifying the performance of the application. This way, we achieve four targets: a) we create deterministic benchmarks, b) whose performance can be quantified, c) from any interactive application and d) with input coming from real users.\n\nThe third line of research focused on the problem of accelerating the construction of the optimisation heuristics that we will use in the rest of our research. Typical approaches to heuristics construction require months of training data collection per platform, which is unacceptably long. During our research we discovered that this process can be sped up considerably. Most of the training data used for building a heuristic provide little additional information, covering parts of the optimisation space for which we already have sufficient knowledge. Our approach instead uses active learning to predict the amount of additional information provided by each point in the optimisation space and collects training data only for the points with the maximum information potential. This way we can collect the same amount of training information for only a fraction of the time, which translates into days or weeks instead of months of training data collection. \n\nResults of this work were published in the LCPC'14, HiPC'14, PACT'14 and IISWC'14 papers. The ALEA tool has been deployed as the a software energy metering substrate by four companies (IBM Research Zurich, Credit Suisse, Analytics Engines Ltd., Neueda Consulting), within the context of the NanoStreams EU project (FP7-610509), as well as by four international research groups (FORTH-ICS, IMEC, EPFL, INRIA) in the context of the NanoStreams and SCoRPiO EU projects (FP7-610509, FP7-323872). \n\nThe aforementioned industry and research groups use the ALEA tool as a method to understand energy consumption patterns and correlate them with components running in their software stacks. The tool has the potential to uncover energy optimisation opportunities for datacentres via interventions in the software stack, such as task consolidation and throttling. This potential is currently under investigation.\n\nALEA further plans to exploit the results of our research on the effects of compiler optimisations on power consumption by implementing a fine-grained power capping system. This system will enforce power consumption limits by loading and executing alternative executable versions of the same program, each one created by using different compiler optimisation options and each one having a different power consumption, depending on the power cap that we have to enforce. The benefit of doing this instead of using other techniques is the fine grainedness of our approach. The power and performance levels that we can enforce through the compiler optimisation options are apart only a few mWatts in terms of power and less than 1% in terms of performance. On the other hand, techniques like DVFS-based power capping can only support a small number of different power/performance levels and therefore might reduce the performance much more than needed in order to stay below a power consumption target.\n\nRegarding the ALEA benchmark creation platform, our next step will be to use the representative benchmarks of interactive applications created through this methodology in order to train and evaluate the previously mentioned power capping system, as well as complementary novel DVFS governors. The ways that this platform can be put into use by others are countless. Practically every research and engineering project that targets mobile devices and incorporates benchmark-based evaluation into its workflow will benefit from using our platform. Digital/Communication/Information Technologies (including Software),Financial Services, and Management Consultancy","dataset":"gtr"}