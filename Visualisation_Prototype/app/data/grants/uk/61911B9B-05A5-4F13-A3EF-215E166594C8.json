{"id":"61911B9B-05A5-4F13-A3EF-215E166594C8","title":"Algorithms that count: exploring the limits of tractability","abstractText":"Computational Complexity is the name given to the rigorous study of the resources required to solve specified computational problems. These are often decision problems (does there exist a structure satisfying certain properties?) or optimisation problems (what is the optimal structure?), but in this project we concentrate on a third class, namely counting problems. The phrase &quot;counting problem&quot; here is widely interpreted; examples of computational problems in this category include: (i) &quot;find the number of satisfying assignments to a CNF Boolean formula&quot;, (ii) &quot;evaluate the partition function of the Ising model (an extensively studied model in statistical physics) with interactions specified by a weighted graph&quot;, and (iii) &quot;find the volume of a convex body&quot;. Example (i) is a straightforward counting problem, (ii) asks for the evaluation of a weighted sum over spin configurations, and (iii) is a definite integral, which is the limiting case of a summation. \n\nCrudely put, there are two objectives in computational complexity, namely lower bounds and upper bounds. Establishing a lower bound amounts to proving that a certain amount of resource, say, time or space, is required to achieve a certain computational goal. Generally, lower bounds can only be established under some complexity-theoretic assumption, the most famous being P not equal to NP. In this project we concentrate on the more optimistic activity of establishing upper bounds, i.e., designing and analysing algorithms for a computational task that provably require only a certain amount of resource. Part of the rationale for the stress on upper bounds is that substantial progress has been made in recent years on lower bounds, and it is important now to see how far these can be matched from the other direction.\n \nAs the vast majority of counting problems are intractable, assuming exact solutions are sought, it will be necessary to investigate various escape routes: efficient approximation algorithms with guaranteed error bounds, algorithms that are provably efficient on restricted classes of problem instances, and parameterised algorithms whose bad behaviour can be controlled by a parameter that is assumed small in problem instances of practical interest. Another strand to the proposed research is to narrow the gap between what is efficient in theory and efficient in practice. In the classical theory, an algorithm is deemed to be efficient if it runs in time polynomial in the instance size. This theoretical notion of efficiency often corresponds to tractability in practice, but the correspondence is not so good in the context of counting problems, where Markov chain Monte Carlo is the most common solution technique.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/N004221/1","grantId":"EP/N004221/1","fundValue":"361972","fundStart":"2015-11-01","fundEnd":"2018-10-31","funder":"EPSRC","impactText":"","person":"Mark  Jerrum","coPersons":[],"organisation":"Queen Mary, University of London","findingsText":"","dataset":"gtr"}