{"id":"131F9D15-EDCA-4783-AC9C-569D9B4D49DA","title":"Solving Parity Games and Mu-Calculi","abstractText":"Modal mu-calculus is a logical language used for describing the behaviour of hardware and software systems. It is widely used, but we still don't know some of its main mathematical properties. In particular, we don't know whether it's always cheap to work out whether a system has some behaviour described in this language, or whether very complicated properties are really expensive to check. People have been trying to solve this problem for more than 20 years now.In this grant proposal, we want to explore some new approaches to this problem. Our main aim is to use a branch of mathematics called descriptive set theory, which looks at the difficulty of describing - writing down in mathematical notation - sets of numbers. Some sets require very complicated formulae to write them down, whereas others have simple descriptions. In earlier work, we have made a connection between this difficulty of describing sets, and the complexity of properties in modal mu-calculus, which let us solve another well known problem about modal mu-calculus. Now we want to take these ideas much further, and see if we can get closer to a solution to the problem described above.Another of the surprising things about this problem is that there are ways of solving it which look as though they are fast, but which nobody can yet prove really are fast. So we will also try to understand these solutions more deeply, hoping to show either that they really are always fast, or that we can come up with bad examples on which they take a long time.We are also trying to solve another problem about modal mu-calculus, which is basically this: if you give me a formula that looks very complicated, can I work out whether it is really a complicated property, or whether it can be turned into an equivalent but much simpler formula? This has also been around for a long time, with only limited answers. We think that this problem is well suited to an approach with our techniques, and we are optimistic about solving it.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/G012962/1","grantId":"EP/G012962/1","fundValue":"279162","fundStart":"2009-01-01","fundEnd":"2012-12-31","funder":"EPSRC","impactText":"  Our work on the QVT-R language has been taken up by others in implementation.  ","person":"Julian  Bradfield","coPersons":[],"organisation":"University of Edinburgh","findingsText":" We have introduced a new technique moving a step closer to one of the open problems the grant examined. We have defined a new notion of 'unfolding' of Petri nets, which gives a balance between complexity and compactness. In the main topic of mu-calculus alternation, we have established a new and deep connection between this and the already known Wadge hierarchy. On the practical side, we have given a precise semantics to the industrial software engineering language QVT-R. The work on mu-calculus alternation is primarily of interest to researchers. The work on Petri nets may ultimately be of use in the verification community; this is being taken forward by submission to appropropriate academic fora.\nThe work on QVT-R is aimed at systems and software modellers; it has been published in mixed academic/industrial conferences, and our co-author on that work is best placed to carry it forward so that it can form the basis of new implementations of systems modelling tools. Digital/Communication/Information Technologies (including Software)","dataset":"gtr"}