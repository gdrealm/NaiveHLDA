{"id":"EC81B9EB-0DED-4661-885A-AFDF5EA27900","title":"HPC-GAP: High Performance Computational Algebra and Discrete Mathematics","abstractText":"This project will reengineer existing, and widely used software for computation in algebra and discrete mathematics to take advantage of the power of current and future high-performance computers. Our main focus is on the GAP system and the more recent SymGridPar middleware, which provide flexible and effective computation on single processors and small clusters. We will adapt the software to efficiently use large clusters of multi-core processors to perform larger computations. To demonstrate the effectiveness of our adaptations we will apply our new software to problems from a number of important areas of pure mathematics.","grantUrl":"http://gtr.rcuk.ac.uk/projects?ref=EP/G05553X/1","grantId":"EP/G05553X/1","fundValue":"366253","fundStart":"2009-10-15","fundEnd":"2013-10-14","funder":"EPSRC","impactText":"  Our results, in terms of novel software technology, have been directly used by our project partners in producing the reported publications and have been picked up by other academics interested in languages and systems for large-scale parallel computation. In particular the HdpH language and the SymGridPar2 infrastructure have attracted interest in the very active Haskell developers community, by providing scalable and portable parallelism on large-scale parallel systems. Our results, in terms of improved performance for symbolic computation applications on super-computers, have created interest in the wider parallel programming community, being the first of its kind on modern super-computers. Digital/Communication/Information Technologies (including Software) Economic","person":"Hans-Wolfgang  Loidl","coPersons":["Phil  Trinder"],"organisation":"Heriot-Watt University","findingsText":" It is challenging, but possible, to implement HPC-Scale parallelism for algebraic computations, such as those described in the GAP system. From a performance point of view we demonstrate that we can achieve good speedups on a modern super-computer (EPCC's HECToR) for challenging symbolic computation applications. From a software development point of view we find that with careful engineering it is possible to provide consistent, high-level interfaces to coordinate parallel algebraic computations on multicores, cluster, and HPC architectures. The GAP system, the leading open source system for computational algebra, can be used in a range of industrial contexts, such as cryptographic methods for security. Through the HPCGAP award, the GAP system has significantly enhanced its functionality, in particular supporting multi-threading, widening its scale of applications. It can be combined with other coordination languages and with other computer algebra systems supporting the SCSCP protocol. Thus it achieves large-scale distributed computing and exploits the computational power on a scale not possible for other computational algebra systems. The GAP developers community continues to provide documentation, workshops and training courses, to make this new functionality accessible to GAP users, in order to apply its parallel software technology to more, challenging symbolic computation applications in all areas of computational science. A proposal &quot;CoDiMa&quot; currently under submission for EPSRC's &quot;Collaborative Computational Projects&quot; scheme, aims to continue this research. Digital/Communication/Information Technologies (including Software)","dataset":"gtr"}